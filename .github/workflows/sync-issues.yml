name: Sync Issues to JSON

on:
  issues:
    types: [opened, labeled, edited, reopened, closed]

permissions:
  contents: write
  issues: read

concurrency:
  group: sync-issues-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  sync-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create issues directory if not exists
        run: mkdir -p public/data

      - name: Install action dependencies (sync-issue)
        working-directory: actions/sync-issue
        run: npm ci

      - name: Sync issue to JSON (local action)
        uses: ./actions/sync-issue
        with:
          json-path: public/data/issues.json

      - name: Check for changes in data file
        id: verify
        run: |
          if git diff --quiet -- public/data/issues.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes to main
        if: steps.verify.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/data/issues.json
          git commit -m "ðŸ¤– Sync issue #${{ github.event.issue.number }} (${{ github.event.action }})"
          git pull --rebase origin main
          git push origin HEAD:main

      - name: Save issues.json to temp before switching branch
        if: steps.verify.outputs.changed == 'true'
        run: cp public/data/issues.json /tmp/issues.json

      - name: Push issues.json to gh-pages
        if: steps.verify.outputs.changed == 'true'
        run: |
          git fetch origin gh-pages || true
          git checkout gh-pages || git switch -c gh-pages
          mkdir -p data
          cp /tmp/issues.json data/issues.json
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [[ -n $(git status --porcelain data/issues.json) ]]; then
            git add data/issues.json
            git commit -m "ðŸ¤– Sync issue #${{ github.event.issue.number }} (${{ github.event.action }}) [gh-pages]"
            git push origin gh-pages
          fi
