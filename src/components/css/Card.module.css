.Card {
  text-decoration: none;
  color: var(--brand-color-text-default);
  border-radius: var(--brand-borderRadius-xlarge);
  transition: transform var(--brand-Card-animation-duration) var(--brand-Card-animation-easing);
  padding: var(--base-size-32);
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas:
    'image image'
    'icon icon'
    'label label'
    'heading heading'
    'description description'
    'action action';
  flex: auto;
  grid-template-rows: auto auto auto auto 1fr;
  position: relative;
  height: 100%;
}

.Card--align-center .Card {
  text-align: center;
  padding: var(--base-size-64) var(--base-size-40);
}

@media screen and (min-width: 64rem) {
  .Card--align-center .Card {
    padding: var(--base-size-64) var(--base-size-80);
  }
}

.Card--align-center .Card {
  grid-template-columns: 1fr;
  grid-template-areas:
    'image'
    'icon'
    'label'
    'heading'
    'description'
    'action';
  justify-items: center;
}

.Card--maxWidth {
  max-width: var(--brand-Card-maxWidth);
}

.Card--fullWidth {
  max-width: unset;
}

.Card--variant-minimal {
  padding: 0;
}

.Card--variant-default,
.Card--variant-torchlight.Card--colorMode-light {
  background-color: var(--brand-Card-background-default);
}

.Card:hover {
  text-decoration: none;
}

.Card__link {
  color: currentColor;
  text-decoration: none !important;
}

.Card--disableAnimation:hover .Card__link {
  text-decoration: underline !important;
}

/* The focus outline will appear around the entire card, not just the title */
.Card__link:focus {
  outline: none;
}

.Card__link::before {
  content: '';
  position: absolute;
  inset: 0;
}

.Card--border {
  border: var(--brand-borderWidth-thin) solid var(--brand-color-border-default);
}

.Card__outer {
  height: 100%;
  border-radius: var(--brand-borderRadius-xlarge);
}

.Card__outer:focus-within {
  outline: var(--brand-borderWidth-thick) solid var(--brand-color-focus);
}

.Card__outer:has(.Card--variant-minimal):focus-within {
  outline-offset: var(--base-size-16);
}

.Card--icon {
  grid-template-areas:
    'image image'
    'icon label'
    'heading heading'
    'description description'
    'action action';
}

.Card--icon .Card__label {
  justify-self: flex-end;
}

.Card--align-center .Card--icon .Card__label {
  justify-self: center;
}

.Card--icon .Card__label,
.Card--icon .Card__icon {
  align-self: center;
}

.Card:not(.Card--disableAnimation, .Card--variant-torchlight.Card--colorMode-dark):hover {
  transform: scale3d(1.025, 1.025, 1);
}

.Card__image {
  margin-bottom: var(--base-size-28);
  border-radius: var(--brand-borderRadius-medium);
  overflow: hidden;
  grid-area: image;
}

.Card__image img,
.Card__image picture,
.Card__image span {
  display: block;
}

.Card__icon {
  margin-bottom: var(--base-size-24);
  grid-area: icon;
}

.Card__label {
  margin-bottom: var(--base-size-24);
  grid-area: label;
}

.Card__heading {
  /* NOTE (lines R284-R289): Heading typography was previously defined in multiple places
     which caused a conflicting font-size (originally 1.125rem) to be overridden later
     by the event-specific rule (1.05rem). Consolidated the heading font-size,
     line-height and font-weight here so there's a single source of truth. If a
     variant needs a different size, prefer adding a modifier class explicitly.
  */
  margin-bottom: var(--base-size-20);
  grid-area: heading;
  font-size: 1.05rem;
  line-height: 1.2;
  font-weight: 600;
}

.Card--fullWidth:not(.Card--align-center) .Card__heading {
  max-width: 320px;
}

.Card__description {
  margin-bottom: var(--base-size-32);
  grid-area: description;
}

.Card--fullWidth:not(.Card--align-center) .Card__description {
  max-width: 400px;
}

.Card__action {
  grid-area: action;
  margin-top: auto;
  display: inline-flex;
  align-items: center;
}

.Card--align-center .Card__action {
  justify-content: center;
}

.Card__action,
.Card__action span {
  color: var(--brand-Link-color-accent);
}

.Card--skew {
  height: 100%;
  border-radius: var(--brand-borderRadius-xlarge);
  overflow: hidden;
}

.Card--skew:focus-within {
  outline: var(--brand-borderWidth-thick) solid var(--brand-color-focus);
}

.Card--skew:hover .Card__torch {
  opacity: 0.85;
}

.Card__skew-bounding {
  border-radius: var(--brand-borderRadius-xlarge);
  position: relative;
  overflow: hidden;
  z-index: 1;
  height: 100%;
  background-color: var(--brand-Card-background-default);
}

.Card__torch {
  width: 650px;
  height: 650px;
  background-color: var(--brand-color-accent-primary);
  filter: blur(180px);
  border-radius: 300px;
  opacity: 0;
  transition: opacity 1.2s cubic-bezier(0.16, 1, 0.3, 1);
  mix-blend-mode: soft-light;
  will-change: transform;
  pointer-events: none;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: -1;
}

/* Variant used for events to enforce uniform size and image behavior (consolidated) */

.Card--event {
  width: 100%;
  /* let inline styles from JS control visual width; keep centered */
  max-width: none;
  min-height: 320px;
  box-shadow: 0 8px 28px rgba(15, 23, 42, 0.10);
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  border-radius: 12px;
  overflow: hidden;
  background-clip: padding-box;
  transition: transform 220ms var(--brand-Card-animation-easing), box-shadow 220ms var(--brand-Card-animation-easing);
  margin: 0 auto 20px auto;
  box-sizing: border-box;
  border: 1px solid transparent;
}

.Card--event:hover {
  transform: translateY(-6px) scale(1.01);
  box-shadow: 0 18px 40px rgba(15, 23, 42, 0.14);
  border-color: rgba(99,102,241,0.06);
}

.Card--event .Card__image {
  height: 260px;
  width: calc(100% - 40px);
  margin: 12px auto 0 auto;
  border-radius: 10px;
  overflow: hidden;
  position: relative;
  order: -1;
}

.Card--event .Card__image img,
.Card--event .Card__image picture,
.Card--event .Card__image span {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.Card.Card--event {
  display: flex;
  flex-direction: column;
  padding: 0;
  align-items: stretch;
}

.Card.Card--event .Card__action {
  display: flex;
  justify-content: center;
  padding: var(--base-size-12) var(--base-size-20) var(--base-size-20) var(--base-size-20);
}

.Card--event .Card__heading {
  margin: var(--base-size-16) var(--base-size-20) 0 var(--base-size-20);
}

.Card--event .Card__description {
  margin: var(--base-size-8) var(--base-size-20) var(--base-size-20) var(--base-size-20);
  color: var(--brand-color-text-muted);
}

.Card--expandableArrow {
  margin-inline-start: var(--base-size-4);
}

.Card:has(.Card__link:hover) .Card--expandableArrow {
  transform: translateX(var(--base-size-4));
}

.Card:has(.Card__link:hover) .Card--expandableArrow path:nth-of-type(2) {
  stroke-dashoffset: 20;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  .Card,
  .Card::before,
  .Card::after,
  .Card * {
    animation: none !important;
    transition: none !important;
    scroll-behavior: auto !important;
  }
}